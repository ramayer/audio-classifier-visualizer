name: Python Hatch Test

on: [push]


concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  run:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}

    #defaults:
    #    run:
    #      working-directory: backend

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest]
        #python-version: ['3.10', '3.12']
        python-version: ['3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install UV
      run: curl -LsSf https://github.com/astral-sh/uv/releases/latest/download/uv-installer.sh | sh

    - name: Install hatch
      run: |
        uv pip install --system  hatch

    - name: Run static analysis
      #working-directory: backend
      run: hatch fmt --check

    #- name: Check types
    #  run: hatch run types:check

    # ERROR tests/test_on_existing_audio_classifier.py - torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 5.78 GiB of which...
    #- name: Run tests
    #  run: hatch test --python ${{ matrix.python-version }} --cover-quiet --randomize --parallel --retries 5 --retry-delay 3

    #- name: Disambiguate coverage filename
    #  run: mv .coverage ".coverage.${{ matrix.os }}.${{ matrix.python-version }}"

    #- name: Upload coverage data
    #  uses: actions/upload-artifact@v4
    #  with:
    #      include-hidden-files: true
    #      name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
    #      path: .coverage*
